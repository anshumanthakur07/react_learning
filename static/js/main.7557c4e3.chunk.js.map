{"version":3,"sources":["logo.svg","component/Navbar.js","component/Textarea.js","component/About.js","component/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","props","React","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","role","onClick","togglemode","htmlfor","btn","Textarea","_useState","useState","_useState2","_slicedToArray","text","setText","Fragment","heading","value","onChange","event","target","style","background","rows","newtext","toUpperCase","showAlert","toLowerCase","col","document","getElementById","color","split","length","About","backgroundColor","_useState3","_useState4","class","data-bs-parent","Alert","alert","tpe","msg","defaultProps","link","App","setmode","setbtn","_useState5","_useState6","setalert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.7557c4e3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import React from 'react'\r\nimport propTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom/cjs/react-router-dom.min';\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\"  href=\"/textarea\">Home</a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/about\">About</a>\r\n            </li>\r\n\r\n          </ul>\r\n          {/* <form className=\"d-flex\" role=\"search\">\r\n            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n            <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n          </form> */}\r\n        </div>\r\n        <div className={`form-check form-switch text-${props.mode==='dark'?'light':'dark'}`} >\r\n  <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" onClick={props.togglemode}/>\r\n  <label className=\"form-check-label\" htmlfor=\"flexSwitchCheckDefault\" >{props.btn}</label>\r\n</div>\r\n\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\nNavbar.propTypes = {\r\n  title: propTypes.string,\r\n  link: propTypes.string\r\n}\r\nNavbar.defaultProps = {\r\n  title: \"give title\",\r\n  link: \"write about here\"\r\n};","\r\nimport React, { useState } from 'react'\r\n\r\nexport default function Textarea(props) {\r\n\r\n  const [text, setText] = useState('enter text here!');\r\n  //text=\"new text\"  ---->wrong way to change the state\r\n  //setText(\"new text\")  ---->right way to change the state\r\n\r\n  const handleUpClick = () => {\r\n    // console.log(\"uppercase was clicked!\")\r\n    let newtext = text.toUpperCase();\r\n    setText(newtext);\r\n    props.showAlert(\"converted to upper case\",\"success\");\r\n    \r\n  }\r\n  const handledownpClick = () => {\r\n    // console.log(\"lowercase was clicked!\")\r\n    let newtext = text.toLowerCase();\r\n    setText(newtext);\r\n    props.showAlert(\"converted to lower  case\",\"success\");\r\n  }\r\n  const handleClearClick = () => {\r\n    let newtext = \"\";\r\n    setText(newtext);\r\n    props.showAlert(\"all text clear!!\",\"success\");\r\n  }\r\n  const handleColorClick = () => {\r\n    let col=document.getElementById(\"txt_area\");\r\n    col.style.color=\"green\";\r\n    props.showAlert(`converted text color to ${col.style.color}`,\"success\");\r\n  }\r\n  const handleOnChange = (event) => {\r\n    // console.log(\"onchange was clicked!\")\r\n    setText(event.target.value);\r\n  }\r\n  \r\n\r\n  return (\r\n    <>\r\n      <h1>{props.heading}</h1>\r\n      <div className=\"mb-3\" >\r\n        <textarea className=\"form-control\" id=\"txt_area\" value={text} onChange={handleOnChange}  style={{background:props.mode==='dark'?'grey':'white'}}  rows=\"8\"></textarea>\r\n      </div>\r\n      <button type=\"buton\" className='btn btn-primary mx-2' onClick={handleUpClick}>upper_case</button>\r\n      <button type=\"buton\" className='btn btn-primary mx-2' onClick={handledownpClick}>lower_case</button>\r\n      <button type=\"buton\" className='btn btn-primary mx-2' onClick={handleColorClick}>Text color</button>\r\n      <button type=\"buton\" className='btn btn-primary mx-2' onClick={handleClearClick}>clear all</button>\r\n\r\n\r\n      <div className=\"container\">\r\n        <h1>Your test summary</h1>\r\n        <p> Number of words::{text.split(\" \").length} number of charevters ::{text.length}</p>\r\n        <h2>preview</h2>\r\n        <p>{text}</p>\r\n\r\n      </div>\r\n\r\n    </>\r\n  )\r\n}\r\n","import React,{useState} from 'react'\r\n// import babel/plugin-proposal-private-property-in-object\r\n\r\nexport default function About(props) {\r\n\r\n    const [letStyle,setLetStyle]=useState({\r\n        backgroundColor: 'white',\r\n        color:'black'},\r\n\r\n\r\n    );\r\n    const [btnText,setbtnText] = useState(\"enable dark mode\")\r\n\r\n    const toggleClick=()=>\r\n    {\r\n        // console.log(\"button clicked!!!!\");\r\n        if(letStyle.color ==='black')\r\n        {\r\n            setLetStyle({\r\n                backgroundColor: 'grey',\r\n                color:'white',\r\n                // border: '1px solid white',\r\n\r\n            })\r\n            setbtnText(\"enable light mode\");\r\n        }\r\n        else\r\n        {\r\n            setLetStyle({\r\n                backgroundColor: 'white',\r\n                color:'black'\r\n                \r\n            })\r\n            setbtnText(\"enable dark mode\");\r\n\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div className='container my-3' style={{background:props.mode==='dark'?'grey':'white'} } >\r\n            <h1>About  Us</h1>\r\n            <div class=\"accordion\" id=\"accordionExample\">\r\n                <div class=\"accordion-item\" style={{background:props.mode==='dark'?'grey':'white'}}>\r\n                    <h2 class=\"accordion-header\">\r\n                        <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\" style={{background:props.mode==='dark'?'grey':'white'}}>\r\n                            ANSHUMAN THAKUR\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseOne\" class=\"accordion-collapse collapse show\" data-bs-parent=\"#accordionExample\">\r\n                        <div class=\"accordion-body\" style={{background:props.mode==='dark'?'grey':'white'}}>\r\n                            <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"accordion-item\" style={{background:props.mode==='dark'?'grey':'white'}}>\r\n                    <h2 class=\"accordion-header\">\r\n                        <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\" style={{background:props.mode==='dark'?'grey':'white'}}>\r\n                            AMIT THAKUR\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseTwo\" class=\"accordion-collapse collapse\" data-bs-parent=\"#accordionExample\">\r\n                        <div class=\"accordion-body\" style={{background:props.mode==='dark'?'grey':'white'}}>\r\n                            <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"accordion-item\" style={{background:props.mode==='dark'?'grey':'white'}}>\r\n                    <h2 class=\"accordion-header\">\r\n                        <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\" style={{background:props.mode==='dark'?'grey':'white'}}>\r\n                            UDIT THAKUR\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseThree\" class=\"accordion-collapse collapse\" data-bs-parent=\"#accordionExample\" >\r\n                        <div class=\"accordion-body\" style={{background:props.mode==='dark'?'grey':'white'}}>\r\n                            <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* <button onClick={toggleClick} className='btn btn-primary my-3'>{btnText}</button> */}\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n  return (\r\n    \r\n     props.alert && <div class={`alert alert-${props.alert.tpe} alert-dismissible fade show`} role=\"alert\">\r\n  <strong>{props.alert.tpe}</strong> :: {props.alert.msg}\r\n  {/* <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n</div>\r\n\r\n  )\r\n}\r\n\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './component/Navbar';\nimport Textarea from './component/Textarea';\nimport About from './component/About';\nimport React, { useState } from 'react';\nimport Alert from './component/Alert';\n// import About from './component/About';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link,\n//   useRouteMatch,\n//   useParams\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setmode] = useState('dark');\n  const [btn, setbtn] = useState('enable dark mode')\n  const [alert, setalert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setalert({\n      msg: message,\n      tpe: type\n    })\n\n    setTimeout(() => {\n      setalert(null);\n    }, 1500);\n  }\n\n  const togglemode = () => {\n    if (mode === 'dark') {\n      setmode('light');\n      setbtn('enable dark mode')\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"light mode is enabled\",\"success\");\n    }\n    else {\n\n      setmode('dark');\n      setbtn('enable light mode')\n      document.body.style.backgroundColor = 'grey';\n      showAlert(\"dark mode is enabled\", \"success\");\n    }\n    \n\n\n  }\n  return (\n    <>\n  \n      {/* <Navbar title=\"TextUtil\" link=\"about\"/> */}\n      <Navbar togglemode={togglemode} mode={mode} btn={btn} title={\"Text_util\"} />\n      <Alert alert={alert} />\n      <div className=\"container\">\n        <About mode={mode} />\n        <Textarea  showAlert={showAlert}heading=\"Enter Details\" mode={mode} />\n     \n       \n      </div>\n       \n        \n\n    </>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}